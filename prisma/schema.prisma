generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  orders Order[]

  @@map("users")
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  SHIPPED
  DELIVERED
  COMPLETED
}

model Order {
  id             String      @id @default(uuid())
  customerId     String      @map("customer_id")
  firstName      String      @map("first_name")
  lastName       String      @map("last_name")
  companyName    String?     @map("company_name")
  status         OrderStatus @default(PENDING)
  zipCode        String      @map("zip_code")
  country        String
  streetAddress  String      @map("street_address")
  city           String
  province       String
  email          String
  additionalInfo String?     @map("addiotional_info")
  addOnAddress   String      @map("add_on_address")
  paymentMethod  String      @map("payment_method")
  totalInCents   Int         @map("total_in_cents")
  createdAt      DateTime    @default(now()) @map("created_at")

  customer User         @relation(fields: [customerId], references: [id])
  items    OrderItems[]

  @@map("orders")
}

model OrderItems {
  id                  String @id @default(uuid())
  productId           String @map("product_id")
  productVariantId    String @map("product_variant_id")
  orderId             String @map("order_id")
  quantity            Int
  priceInCentsPerUnit Int    @map("price_in_cents_per_unit")
  subTotalInCents     Int    @map("sub_total_in_cents")

  product        Product        @relation(fields: [productId], references: [id])
  order          Order          @relation(fields: [orderId], references: [id])
  productVariant ProductVariant @relation(fields: [productVariantId], references: [id])

  @@map("orders_items")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  description String
  categoryId  String
  createdAt   DateTime @default(now()) @map("created_at")

  orderItems OrderItems[]
  colors     ProductColor[]
  sizes      ProductSize[]
  variants   ProductVariant[]

  images   Attachment[]
  category ProductCategory? @relation(fields: [categoryId], references: [id])
  tags     ProductTags[]

  @@map("products")
}

model ProductCategory {
  id       String    @id @default(uuid())
  name     String
  slug     String    @unique
  products Product[]

  @@map("product_categorys")
}

model Attachment {
  id        String  @id @default(uuid())
  title     String
  url       String
  productId String  @map("product_id")
  product   Product @relation(fields: [productId], references: [id])

  @@map("attachments")
}

model ProductColor {
  id        String  @id @default(uuid())
  productId String? @map("product_id")
  name      String
  hexCode   String

  product  Product?         @relation(fields: [productId], references: [id])
  variants ProductVariant[]

  @@map("product_colors")
}

model ProductSize {
  id        String  @id @default(uuid())
  productId String? @map("product_id")
  name      String
  size      String

  product  Product?         @relation(fields: [productId], references: [id])
  variants ProductVariant[]

  @@map("product_sizes")
}

model ProductVariant {
  id           String   @id @default(uuid())
  productId    String   @map("product_id")
  sizeId       String   @map("size_id")
  colorId      String   @map("color_id")
  sku          String   @unique
  quantity     Int
  discount     Int?
  priceInCents Int      @map("price_in_cents")
  createdAt    DateTime @default(now()) @map("created_at")

  product    Product      @relation(fields: [productId], references: [id])
  size       ProductSize  @relation(fields: [sizeId], references: [id])
  color      ProductColor @relation(fields: [colorId], references: [id])
  orderItems OrderItems[]

  @@unique([productId, colorId, sizeId])
  @@map("product_variants")
}

model ProductTags {
  id        String  @id @default(uuid())
  name      String
  productId String  @map("product_id")
  product   Product @relation(fields: [productId], references: [id])

  @@map("product_tags")
}
